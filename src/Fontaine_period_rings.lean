/-
Copyright (c) 2023 Mar√≠a In√©s de Frutos-Fern√°ndez. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Mar√≠a In√©s de Frutos-Fern√°ndez
-/

import data.polynomial.laurent
import ring_theory.witt_vector.basic
import ring_theory.perfection
import topology.algebra.nonarchimedean.adic_topology
import Cp_def

/-!
# Fontaine period rings

In this file we define the field `‚ÑÇ_[p]` of `p`-adic complex numbers and we give it both a normed 
field and a valued field structure, induced by the unique extension of the `p`-adic norm to `‚ÑÇ_[p]`.

## Main Definitions

* `padic_complex` : the type of `p`-adic complex numbers.
* `padic_complex_integers` : the ring of integers of `‚ÑÇ_[p]`.


## Main Results

* `padic_complex.norm_extends` : the norm on `‚ÑÇ_[p]` extends the norm on `Q_p_alg p`, and hence
  the norm on `‚Ñö_[p]`.
* `padic_complex.is_nonarchimedean` : The norm on `‚ÑÇ_[p]` is nonarchimedean.


## Notation

We introduce the notation `‚ÑÇ_[p]` for the `p`-adic complex numbers, and `ùìû_‚ÑÇ_[p]` for its ring of
integers.

## Tags

p-adic, p adic, padic, norm, valuation, cauchy, completion, p-adic completion
-/

noncomputable theory

variables (p : ‚Ñï)  [fact p.prime]

/- Fontaine's period rings -/

open mv_polynomial

/-- The first example of Fontaine period ring is given by the algebraic closure `K^alg` of a
 `p`-adic field `K`. -/
@[nolint unused_arguments] def K_alg {K : Type*} [field K] [algebra ‚Ñö_[p] K]  (h_fin : finite_dimensional ‚Ñö_[p] K) := 
algebraic_closure K 

/-- The ring `B_HT` is defined as the Laurent polynomial ring `‚ÑÇ_[p][X, X‚Åª¬π]`. -/
def B_HT := laurent_polynomial ‚ÑÇ_[p]

-- We know present the strategy for the formalization of B_dR
instance : fact ((padic_complex.valued_field p).v ‚Üëp ‚â† 1) := 
‚ü®by simp only [padic_complex.valuation_p, one_div, ne.def, inv_eq_one, nat.cast_eq_one,
      nat.prime.ne_one _inst_1.1, not_false_iff]‚ü©

def E :=  pre_tilt ‚ÑÇ_[p] (padic_complex.valued_field p).v ùìû_‚ÑÇ_[p]
(valuation.integer.integers _) p

instance : comm_ring (E p) := pre_tilt.comm_ring ‚ÑÇ_[p] (padic_complex.valued_field p).v ùìû_‚ÑÇ_[p]
(valuation.integer.integers _) p

/-- `A_inf` is the ring of Witt vectors of `E p`. -/
def A_inf := witt_vector p (E p)

instance : comm_ring (A_inf p) := witt_vector.comm_ring _ _

def B_inf_plus := localization.away (p : A_inf p)
instance : comm_ring (B_inf_plus p) := localization.comm_ring

noncomputable! def theta : ring_hom (B_inf_plus p) ‚ÑÇ_[p] := sorry

lemma theta.surjective : function.surjective (theta p) := sorry

instance : with_ideal (B_inf_plus p) := ‚ü®(theta p).ker‚ü©

def B_dR_plus := uniform_space.completion (B_inf_plus p)

instance : comm_ring (B_dR_plus p) := uniform_space.completion.comm_ring (B_inf_plus p)

def B_dR := fraction_ring (B_dR_plus p)

#lint